(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{302:function(e,n,t){"use strict";t.r(n);var a=t(38),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"移动端适配方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#移动端适配方案"}},[e._v("#")]),e._v(" 移动端适配方案")]),e._v(" "),t("p",[e._v("分析lib-flexible的源码后，发现它主要做了以下几件事：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("window.onload = function () {\n      var dpr = 0\n      var scale = 0\n\n      if (!dpr && !scale) {\n        var isAndroid = window.navigator.appVersion.match(/android/gi)\n        var isIPhone = window.navigator.appVersion.match(/iphone/gi)\n        var devicePixelRatio = window.devicePixelRatio\n        if (isIPhone) {\n          // iOS下，对于2和3的屏，用2倍的方案，其余的用1倍方案\n          if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {\n            dpr = 3\n          } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)) {\n            dpr = 2\n          } else {\n            dpr = 1\n          }\n        } else {\n          // 其他设备下，仍旧使用1倍的方案\n          dpr = 1\n        }\n        scale = 1 / dpr\n      }\n\n      var metaEl = document.createElement('meta')\n      metaEl.setAttribute('name', 'viewport')\n      metaEl.setAttribute(\n        'content',\n        'initial-scale=' +\n          scale +\n          ',maximum-scale=' +\n          scale +\n          ',minimum-scale=' +\n          scale +\n          ',user-scalable=no'\n      )\n      if (document.documentElement.firstElementChild) {\n        document.documentElement.firstElementChild.appendChild(metaEl)\n      } else {\n        var wrap = document.createElement('div')\n        wrap.appendChild(metaEl)\n        document.write(wrap.innerHTML)\n      }\n\n      var rem = document.documentElement.clientWidth / 10\n\n      document.documentElement.style.fontSize = rem + 'px'\n      document.body.style.fontSize = 12 * dpr + 'px'\n    }\n")])])]),t("ol",[t("li",[e._v("动态设置dpr，只考虑了ios设备，dpr = 物理像素（分辨率） / 独立像素（通过window.screen.width获取，实际上就是屏幕的宽度），根据计算，安卓dpr比较混乱，则采取不缩放")]),e._v(" "),t("li",[e._v("动态设置meta标签和html，body的字体大小")])]),e._v(" "),t("p",[e._v("根据屏幕宽度/10设置比例，在所有屏幕下10rem都表示满屏，这样设置会导致继承的其他元素字体很大，所有又设置了body下的字体")]),e._v(" "),t("h3",{attrs:{id:"q-为什么要进行缩放"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q-为什么要进行缩放"}},[e._v("#")]),e._v(" Q:为什么要进行缩放？")]),e._v(" "),t("p",[e._v("A: 如果设置initial-scale=1.0...也是可以做到同样的效果，但是这时候比如在iphone4下，1px的元素是采用2"),t("em",[e._v("2的物理像素来渲染，如果想做到1")]),e._v("1的物理像素去渲染，需要设置css下1px等于1物理像素，等于把画布放大了2倍，然后设置initial-scale=0.5使画布等于窗口大小")]),e._v(" "),t("p",[e._v("至于设置data-dpr，然后设置不同dpr下的字体大小，在源码里面没看到相关设置")]),e._v(" "),t("p",[e._v("这样设置完毕之后实际操作起来会比较麻烦，因为满屏是10rem，这设计稿上量出px单位后需要转换了rem。如果设计稿是750px宽，可以分成75份，这样每10px=1rem，换算比较方便")]),e._v(" "),t("h3",{attrs:{id:"如果使用工具构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果使用工具构建"}},[e._v("#")]),e._v(" 如果使用工具构建")]),e._v(" "),t("ol",[t("li",[e._v("需要安装两个插件\nlib-flexible和postcss-pxtorem")]),e._v(" "),t("li",[e._v("在main.js里面引入lib-flexible，新建postcss.config.js（根目录）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  plugins: {\n    autoprefixer: {},\n    'postcss-pxtorem': {\n      //设计稿对应的rem尺寸，此时是iPhone6对应的75px\n      rootValue: 75,\n      //所有元素的px自动转化成rem\n      propList: ['*'],\n    },\n  },\n}\n")])])]),t("p",[e._v("主要参考文档：\n"),t("a",{attrs:{href:"https://segmentfault.com/a/1190000009017413?_ea=1801249",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://segmentfault.com/a/1190000009017413?_ea=1801249"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://www.sohu.com/a/318395528_100004247",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.sohu.com/a/318395528_100004247"),t("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=r.exports}}]);