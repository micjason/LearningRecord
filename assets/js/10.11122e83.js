(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{304:function(_,n,e){"use strict";e.r(n);var t=e(38),v=Object(t.a)({},(function(){var _=this,n=_.$createElement,e=_._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("p",[_._v("如果远程新建了一个分支，本地没有该分支，可以用\n"),e("code",[_._v("git checkout --track origin/branch_name")]),_._v("\n这时候本地会新建一个分支名叫branch_name，会自动跟踪远程的同名分支branch_name")]),_._v(" "),e("hr"),_._v(" "),e("p",[_._v("用上面中方法，得到的分支名永远和远程的分支名一样，如果想新建一个本地分支不同名字，同时跟踪一个远程分支可以利用。\n"),e("code",[_._v("git checkout -b new_branch_name branch_name")])]),_._v(" "),e("hr"),_._v(" "),e("p",[_._v("本地分支推送到远程\n"),e("code",[_._v("git push --set-upstream origin branch_name")])]),_._v(" "),e("hr"),_._v(" "),e("p",[e("code",[_._v("git log --pretty=oneline")]),_._v(" 漂亮一行显示")]),_._v(" "),e("hr"),_._v(" "),e("p",[e("code",[_._v("git log --oneline")]),_._v(" 简洁显示")]),_._v(" "),e("hr"),_._v(" "),e("p",[e("code",[_._v("git diff [文件名]")]),_._v(" 将工作区中的文件和暂存区进行比较")]),_._v(" "),e("hr"),_._v(" "),e("p",[e("code",[_._v("git diff 哈希值 文件名")]),_._v("  和历史中的一个版本比较")]),_._v(" "),e("hr"),_._v(" "),e("p",[e("code",[_._v("git diff [本地库中历史版本][文件名]")]),_._v(" 将工作区中的文件和本地库里历史记录\n比较，不带文件名，比较多个文件")]),_._v(" "),e("hr"),_._v(" "),e("p",[e("code",[_._v("git branch -d branch_name")]),_._v(" 删除分支")])])}),[],!1,null,null,null);n.default=v.exports}}]);